<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Qing Yun (Posts about proxy)</title><link>http://ls-a.me/</link><description></description><atom:link href="http://ls-a.me/categories/proxy.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:845767657@qq.com"&gt;Tao Qingyun&lt;/a&gt; </copyright><lastBuildDate>Mon, 26 Mar 2018 13:39:23 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>git proxy</title><link>http://ls-a.me/posts/git-proxy/</link><dc:creator>Tao Qingyun</dc:creator><description>&lt;div&gt;&lt;p&gt;Git支持多种传输协议，ssh、git、HTTP(S)，甚至ftp，rsync。&lt;/p&gt;
&lt;p&gt;当使用不同传输方式时，设置代理的方式也不同。&lt;/p&gt;
&lt;h3&gt;SSH&lt;/h3&gt;
&lt;p&gt;当使用SSH协议时，git实际上直接使用ssh命令，所以我们只要给ssh设置好代理就可以了。在~/.ssh/config中：&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;Host github.com
    User                    git
    ProxyCommand            nc -x localhost:1080 %h %p
&lt;/pre&gt;


&lt;p&gt;参见ssh_config(5)manual&lt;/p&gt;
&lt;h3&gt;HTTP(S)&lt;/h3&gt;
&lt;p&gt;git使用&lt;code&gt;libcurl&lt;/code&gt;来处理HTTP和HTTPS，可以通过设置git的&lt;code&gt;http.proxy&lt;/code&gt;选项：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global http.proxy socks5://localhost:1080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;也可以直接设置curl支持的环境变量，比如&lt;code&gt;ALL_PROXY=socks5://localhost:1080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参见curl(1)的--proxy选项和git-config(1)中的http.proxy&lt;/p&gt;
&lt;h3&gt;Git&lt;/h3&gt;
&lt;p&gt;当使用git传输协议时，你可以设置git的&lt;code&gt;gitproxy&lt;/code&gt;选项：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git config --global core.gitproxy git-proxy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里的git-proxy是任何一个可执行文件，同时它要能接受2个参数，host、port（git服务器的地址和端口）。git-proxy完成代理工作。&lt;/p&gt;
&lt;p&gt;例如这样一个shell脚本：&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

nc -x localhost:1080 &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="nv"&gt;$2&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;也可以直接设置环境变量&lt;code&gt;GIT_PROXY_COMMAND=git-porxy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参见git_config(1)&lt;/p&gt;
&lt;h3&gt;如何判断git使用何种协议&lt;/h3&gt;
&lt;p&gt;根据git服务器的url就可以看出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssh://[user@]host.xz[:port]/path/to/repo.git/&lt;/li&gt;
&lt;li&gt;git://host.xz[:port]/path/to/repo.git/&lt;/li&gt;
&lt;li&gt;http[s]://host.xz[:port]/path/to/repo.git/&lt;/li&gt;
&lt;li&gt;ftp[s]://host.xz[:port]/path/to/repo.git/&lt;/li&gt;
&lt;li&gt;rsync://host.xz/path/to/repo.git/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于SSH协议，还有一种类似scp的语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[user@]host.xz:path/to/repo.git/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参见git-fetch(1)的GIT URLS&lt;/p&gt;
&lt;h3&gt;nc命令&lt;/h3&gt;
&lt;p&gt;nc(netcat)可以用 -X 指定代理方式：socks4、 sockes5、 HTTPS CONNECT，默认为socks5。 -x 指定代理地址。&lt;/p&gt;
&lt;p&gt;参见nc(1)&lt;/p&gt;
&lt;h3&gt;example&lt;/h3&gt;
&lt;p&gt;golang的&lt;code&gt;go get&lt;/code&gt;命令会用到git，你可以这样：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env ALL_PROXY=socks5://localhost:1080 GIT_PROXY_COMMAND=git-porxy go get -v ./...&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;reference&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://cms-sw.github.io/tutorial-proxy.html"&gt;Tutorial: how to use git through a proxy&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>proxy</category><guid>http://ls-a.me/posts/git-proxy/</guid><pubDate>Sat, 06 Aug 2016 06:38:12 GMT</pubDate></item></channel></rss>